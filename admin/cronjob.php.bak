#!/usr/local/bin/php


<?php
//#!/usr/local/bin/php
//#!/cygdrive/c/php/php.exe

$filepath = "/home/html_root/htdocs/";
set_time_limit(120);
//$filepath = "../"; 
include("{$filepath}includes/config.inc.php");
include("{$filepath}includes/functions-required.php");
include("{$filepath}includes/mail-functions.php");

//open log file
if (!$logfile = fopen("{$filepath}admin/mail_log.txt","a+")) die("Mail Log Is Not Writeable");
$date=date("j/n/y",$todays_date);
fwrite($logfile,"-----------------\nDate: $date\n\n");

// Run the routine to check for coverpages needing signatures
sign_coverpages();

//RUn routine to check for student awards needing sigs
//sign_awards();

// Check for unsigned ethics apps. Send reminders Monday and Thursday mornings
$now=getdate();
if($now['wday']==1 || $now['wday']==4){
	$apps=mysqlFetchRows("ethicsapps","approved=1");
	foreach($apps as $app){
		$admin=mysqlFetchRow("ethicsapps_admin","eth_id=$app[eth_id] and signed=0");
		if(is_array($admin)){
			$user=mysqlFetchRow("users","user_id=$app[user_id]");
			if(is_array($user)){
				if($app['admin_id']==1) // Send mail to applicant's Chair
					$target=mysqlFetchRow("users left join departments on users.user_id=departments.chair","departments.department_id=$user[department_id]");
				elseif($app['admin_id']==2){ // Send mail to applicant's Dean
					
					$target=mysqlFetchRow("users left join divisions on users.user_id=divisions.dean left join departments on departments.division_id=divisions.division_id","departments.department_id=$user[department_id]");
				}
				elseif($app['admin_id']==3){ // Send mail to applicant's VP
					//Currently only one VP allowed - may extend later
					$vp=mysqlFetchRow("vps","1");
					$target=mysqlFetchRow("users","user_id=$vp[vp]");
				}
			}//is_array user
			
			if($app['f001']!="") $pi=$app['f001'];
			else $pi="Unknown User";
			if(is_array($target)) if($target['email'] !=""){
				//$due=date("F j Y",$app['target_date']);
				$values=array(	
					'testmail'=>false,
					'subject'=>"Reminder: Ethics Signature Required for $pi",
					'to'=>$target['email'],
					'body'=>"$target[first_name]:\n\n<br><br>A Research Ethics Human Subjects application is awaiting your signature. Access it using the link below.\n\n<br><br>Applicant: $pi\n<br>Title: $app[f008]\n<br><br>Access: <a href=\"http://$server_name/grant_admin.php?section=update&id=$app[eth_id]\">http://$server_name/grant_admin.php?section=update&id=$app[eth_id]</a><br>"
				);
				$target['visits']=1; // flag for enable mail
				$target['proj_admin']=1; //flag for bypass http replacement
				mailout($target,0,$values);
				$values['to']='td2668@research.tru.ca';
				$target['email']='td2668@research.tru.ca';
				mailout($target,0,$values);
			}
		}
	}
}


//Check for signed ethics applications that have incomplete reviews and notify reviewers - Monday mornings only
$now=getdate();
if($now['wday']==1){
	$apps=mysqlFetchRows("ethicsapps","approved=1");
	foreach($apps as $app){
		$admin=mysqlFetchRow("ethicsapps_admin","eth_id=$app[eth_id] and signed=1");
		if(is_array($admin)){
			$reviewers=mysqlFetchRows("ethicsapps_reviewers left join hs_members on ethicsapps_reviewers.hs_member_id=hs_members.hs_member_id left join users on hs_members.user_id=users.user_id","ethicsapps_reviewers.eth_id=$app[eth_id] and ethicsapps_reviewers.status<>3");
			if(is_array($reviewers)) foreach($reviewers as $reviewer) {
				if($reviewer['email'] !=""){
					//$due=date("F j Y",$app['target_date']);
					if($app['f001']!="") $pi=$app['f001'];
					else $pi="Unknown User";
					$values=array(	
						'testmail'=>false,
						'subject'=>"Reminder: Ethics Review Required for $app[f000]",
						'to'=>$reviewer['email'],
						'body'=>"$reviewer[first_name]:\n\n<br><br>A Research Ethics Human Subjects application is awaiting your review. Access it using the link below.\n\n<br><br>Applicant: $pi\n<br>Title: $app[f008]\n<br><br>Access: <a href=\"http://$server_name/private/ethics_reviewer.php\">http://$server_name/private/ethics_reviewer.php</a><br>"
					);
					$reviewer['visits']=1; // flag for enable mail
					$reviewer['proj_admin']=1; //flag for bypass http replacement
					mailout($reviewer,0,$values);
					$values['to']='td2668@research.tru.ca';
					$reviewer['email']='td2668@research.tru.ca';
					mailout($reviewer,0,$values);
				}
			
			}
		}
	}
}		

// 1. Check Opportunities - send NEW ITEM to users. Will create a mail item and flag sent to avoid duplicates
$values = mysqlFetchRows("opportunities", "post_date <= $todays_date");
if(is_array($values)) {
	foreach($values as $index) {
		//echo ("$index[title]\n");
		$mailitem=mysqlFetchRow("mail","assoc_id = $index[opportunity_id] AND type='opportunity'");
		if(!is_array($mailitem)) { //Mail has not been sent yet
			//Generate New Mail Item
			$subject = "[ResearchNet] " . $index['title'];
			//log here
			fwrite($logfile,"Mailout: Opportunity\n  Title: $index[title]\n");
			$body = "@firstname@:<br><br>\n\n<b>\"" . $index['title'] ."\"</b> is a new opportunity posted on the TRU Research Website matching the research subjects you have chosen. More information can be found at: <a href=\"http://$server_name/opportunities.php?section=single&id=" . $index['opportunity_id'] . "\">this link</a> on the TRU Research Site<br><br>\n\n";
			//echo ("$subject\n$body\n");
			$s_date=$todays_date;
			$topics_research=$index['topics'];
			$sent=1;
			$values = array('null', addslashes($subject), addslashes($body), $s_date, $topics_research, "", 0, 0, 0, 0, $sent, $index['opportunity_id'], "opportunity",0,0,0,0,0,0);
			$result = mysqlInsert("mail", $values);
			if($result!=1) fwrite($logfile,"\nError Updating Mail Table: $result\n");
			//Do the Send
			$mailitems = array('subject'=>$subject, 'body'=>$body,'testmail'=>false);
			$users=mysqlFetchRows("users");
			if(is_array($users)) {
				array_walk($users,'reset_user');
				array_walk($users,'check_topics',$topics_research);
				//if($index['internal'] == "yes") array_walk($users,'internal'); #remove external users
				foreach($users as $key=>$user) {if ($user['mail_opps']!=1) $users[$key]['visits']=0;}
				array_walk($users,'mailout',$mailitems);
				$total = 0;
				foreach($users as $user) if ($user['visits']==1) $total++;
				if($total >= 1) fwrite($logfile,"Mail sent to $total users\n\n");
				else fwrite($logfile,"Mail sent to no one at all\n\n");
			}
		}
	}
}


// 2. Check Mail for delayed messages & send - flag sent
$mailitems = mysqlFetchRows("mail", "s_date <= $todays_date AND !sent");
if(is_array($mailitems)) {
	foreach($mailitems as $mailitem) {
		//echo("Found: $mailitem[subject]\n");
		//$mailitem['subject'] = "[TRU Research] " . $mailitem['subject'];
		$mailarray = array('subject'=>stripslashes($mailitem['subject']), 'body'=>stripslashes($mailitem['body']),'testmail'=>false);
		$mailarray['subject']="[ResearchNet] " . $mailarray['subject'];
		$users=mysqlFetchRows("users");
		if(is_array($users)) {
			array_walk($users,'reset_user');
			if($mailitem['single_user'] !=0){
			foreach($users as $key=>$user) if($user['user_id']==$mailitem['single_user']) $users[$key]['visits']=1;
			}
			else if (!($mailitem['all_researchers'] || $mailitem['regular_faculty'] || $mailitem['chairs'] || $mailitem['deans'] || $mailitem['outside'])){
			
				if($mailitem['health']==1 || $mailitem['nserc']==1 || $mailitem['sshrc']==1 || $mailitem['indust']==1){
					$groups = array("health","nserc","sshrc","indust");
					foreach($groups as $group){
						$topic_list = mysqlFetchRows("topics_research");
						if (is_array($topic_list))
						foreach($topic_list as $topic)
						if ($mailitem[$group]==1 && $topic[$group]== 1 && !in_array($topic['topic_id'], explode(",",$mailitem['topics_research'])))  $mailitem['topics_research'] .= ",$topic[topic_id]";
					}//foreach group
				}//if health

				array_walk($users,'check_topics',$mailitem['topics_research']);
			
				if ($mailitem['type'] == 'opportunity') {
					foreach($users as $key=>$user) if ($user['mail_opps']!=1) $users[$key]['visits']=0;
					$opp=mysqlFetchRow("opportunities","opportunity_id = $mailitem[assoc_id]");
				
				}
				else if ($mailitem['type'] == 'deadline-early' || $mailitem['type'] == 'deadline-close') {
					foreach($users as $key=>$user) if ($user['mail_deadlines']!=1) $users[$key]['visits']=0;				
				}
				//Type is NULL, so don't send to anyone who has asked for no mail
				else {
					foreach($users as $key=>$user) if ($user['mail_deadlines']!=1 && $user['mail_opps']!=1) $users[$key]['visits']=0;
				}
				
			}// no an override
			// process overrides
			else {  // An override was set, so only send to the items selected 
		
				foreach($users as $key=>$user){
					if($mailitem['all_researchers'] && $user['researcher_id'] != 0)
						$users[$key]['visits']=1;
					if($mailitem['regular_faculty'] && $user['researcher_id']==0 && (strpos($user['email'],'tru.ca') || strpos($user['email'],'cariboo.bc.ca'))) 
						$users[$key]['visits']=1;
					if($mailitem['outside'] && !(strpos($user['email'],'tru.ca') || strpos($user['email'],'cariboo.bc.ca'))) 
						$users[$key]['visits']=1;
					if($mailitem['deans'] && mysql_num_rows(mysql_query("select * from divisions where dean=$user[user_id]")) >= 1) 
						$users[$key]['visits']=1;
					if($mailitem['chairs'] && mysql_num_rows(mysql_query("select * from departments where chair=$user[user_id]")) >= 1) 
						$users[$key]['visits']=1;
				}//foreach user
				
			} // Override section
			
			
			
			
			
			//echo "Before mailout";
			array_walk($users,'mailout',$mailarray); 
			//echo "After Mailout";
			$total = 0; 
			foreach($users as $user) {if($user['visits']==1) $total++;}
			fwrite($logfile,"Mailout: Delayed Send\n  Subject: $mailitem[subject]\n");
			if($total >= 1) fwrite($logfile,"Mail sent to $total users\n\n");
			else fwrite($logfile,"Mail sent to no one at all\n\n");
			$values = array('sent'=>1);
			$result = mysqlUpdate("mail", $values, "mail_id=$mailitem[mail_id]");
		}
	}
}
// 3. Check Deadlines for Early Warning Date, Close Warning - if past, look for mail item with matching ID and TYPE. If not sent, send. If doesn't exist, make it and send. (Allows for repeating deadlines)
//Mail: assoc_id = ID of linked item. TYPE = opportunity, deadline-early, deadline-close
$deadlinetypes=array(
	"early" => array('field'=>'early_warning_date','type'=>'deadline-early','subject'=>'Warning'),
	"close" => array('field'=>'close_warning_date','type'=>'deadline-close','subject'=>'Deadline'));
foreach($deadlinetypes as $deadlinetype) {
$values=mysqlFetchRows("deadlines as d left join deadline_dates as dd on d.deadline_id=dd.deadline_id","$deadlinetype[field] <= $todays_date and d_date > $todays_date and override != 1");
if(is_array($values)) {
	foreach($values as $index) {
		//echo ("$index[title]\n");
		$mailitem=mysqlFetchRow("mail","assoc_id = $index[date_id] AND type='$deadlinetype[type]'");
		if(!is_array($mailitem)) { //Mail has not been sent yet
			//Generate New Mail Item
			if($index['internal']=='yes'){
				$subject = "[Reminder] $deadlinetype[subject]: $index[title]";
				$from="TRU Admin <research@tru.ca>";
				
			}
			else {
				$subject = "[ResearchNet] $deadlinetype[subject]: $index[title]";
				$from="TRU Research Office <research@tru.ca>";
			}
			
			$search=array(	"%dd%", //deadline date
							"%de%", //days in advance
							"%cde%"); //calculated days in advance
			$replace=array(	date("F j", $index['d_date']),
							$index['days_in_advance'],
							date("F j", $index['d_date']-($index['days_in_advance']*60*60*24)));
			$index['warning_message']=str_replace($search,$replace,$index['warning_message']);
			fwrite($logfile,"Mailout: $deadlinetype[subject]\n  Title: $index[title]\n");
			if($index['internal']=='yes') $body = "@firstname@:<br><br>\n\n" . $index['warning_message'] . "<br><br>More information <a href=\"http://$server_name/deadlines.php?section=single&id=" . $index['deadline_id'] . "\">available here</a><br><br>\n";
			else $body = "@firstname@:<br><br>\n\n" . $index['warning_message'] . "<br><br>More information at <a href=\"http://$server_name/deadlines.php?section=single&id=" . $index['deadline_id'] . "\">the TRU Research Site</a><br><br>\n\n(All applications now require a <a href=\"http://$server_name/private/apps.php\">TRU Coverpage</a>)<br><br>\n\n";
			
			$s_date=$todays_date;
			$topics_research=$index['topics'];
			$sent=1;
			$values = array('null', addslashes($subject), addslashes($body), $s_date, $topics_research, "", 0, 0, 0, 0, $sent, $index['date_id'], "$deadlinetype[type]",0,0,0,0,0,0);
			$result = mysqlInsert("mail", $values);
			if($result!=1) fwrite($logfile,"\nError Updating Mail Table: $result\n");
			//Do the Send
			$mailitems = array('subject'=>$subject, 'body'=>$body,'testmail'=>false,'from'=>$from);
			$users=mysqlFetchRows("users");
			if(is_array($users)) {
				array_walk($users,'reset_user');
				array_walk($users,'check_topics',$topics_research);
				//if($index['internal'] == "yes") array_walk($users,'internal'); #remove external users
				foreach($users as $key=>$user) if ($user['mail_deadlines']!=1) $users[$key]['visits']=0;
				array_walk($users,'mailout',$mailitems);
				$total = 0;
				foreach($users as $user) if ($user['visits']==1) $total++;
				if($total >= 1) fwrite($logfile,"Mail sent to $total users\n\n");
				else fwrite($logfile,"Mail sent to no one at all\n\n");
			}
		}
	}
}
}
//4.
//    If deadline date is past, and no expiry date, move all dates up one year -- then check for messages as above and turn off 'sent' flag, -- same for Opportunities
$values=mysqlFetchRows("opportunities","annual='yes' and expiry_date <= $todays_date");
if (is_array($values)) {
	foreach($values as $index) {
		$tmpdate=getdate($index['post_date']);
		$tmpdate['year'] += 1;
		$index['post_date'] = mktime(0,0,0,$tmpdate['mon'],$tmpdate['mday'],$tmpdate['year']);
		$tmpdate=getdate($index['expiry_date']);
		$tmpdate['year'] += 1;
		$index['expiry_date'] = mktime(0,0,0,$tmpdate['mon'],$tmpdate['mday'],$tmpdate['year']);
		$tmpdate=getdate($index['due_date']);
		if($tmpdate['year'] < 2030) { //NO due date
			$tmpdate['year'] += 1;
			$index['due_date'] = mktime(0,0,0,$tmpdate['mon'],$tmpdate['mday'],$tmpdate['year']);
		}
		$outvals=array('post_date'=>$index['post_date'],'expiry_date'=>$index['expiry_date'],'due_date'=>$index['due_date']);
		$result=mysqlUpdate("opportunities",$outvals,"opportunity_id=$index[opportunity_id]");
		if ($result!=1) fwrite($logfile,"Error updating Opportunity: $result\n\n");
		else {
			fwrite($logfile,"Opp Annual Increment: $index[title]\n\n");
			$headers = "From: TRU Research Office <research@tru.ca>\n";
			$headers .= "Reply-To: tdavis@tru.ca\n";
    		$headers .= "X-Mailer: PHP/" . phpversion();
			$headers  .= "\nMIME-Version: 1.0\n";
			$headers .= "Content-type: text/html; charset=iso-8859-1";
			$message="Opportunity Incremented (no mailout for next year) <a href='http://$server_name/opportunities.php?section=single&id=$index[opportunity_id]'>$index[title]</a>.";
			mail("tdavis@tru.ca","[Server] Opp Increment",$message,$headers);
		}
// Killed because New Opportunities are not NEW the next year
//		$mailitems = mysqlFetchRows("mail","assoc_id=$index[opportunity_id] and type='opportunity'");
//		if(is_array($mailitems)) {
//			foreach($mailitems as $mailitem) {
//				$outvals=array('assoc_id'=>'null', 'type'=>'null');
//				$result=mysqlUpdate("mail",$outvals,"mail_id=$mailitem[mail_id]");
//				if ($result != 1) fwrite($logfile,"Error removing SENT status from associated mail: $result\n\n");
//			}
//		}	
	}
}

$values=mysqlFetchRows("deadlines as d left join deadline_dates as dd on d.deadline_id=dd.deadline_id","expiry_date=0 AND d_date < $todays_date");

if (is_array($values)) {
	foreach($values as $index) {
		$tmpdate=getdate($index['d_date']);
		$tmpdate['year'] += 1;
		$index['d_date'] = mktime(0,0,0,$tmpdate['mon'],$tmpdate['mday'],$tmpdate['year']);
		$tmpdate=getdate($index['close_warning_date']);
		$tmpdate['year'] += 1;
		$index['close_warning_date'] = mktime(0,0,0,$tmpdate['mon'],$tmpdate['mday'],$tmpdate['year']);
		$tmpdate=getdate($index['early_warning_date']);
		$tmpdate['year'] += 1;
		$index['early_warning_date'] = mktime(0,0,0,$tmpdate['mon'],$tmpdate['mday'],$tmpdate['year']);
		$outvals=array('d_date'=>$index['d_date'],'close_warning_date'=>$index['close_warning_date'],'early_warning_date'=>$index['early_warning_date']);
		$result=mysqlUpdate("deadline_dates",$outvals,"date_id=$index[date_id]");
		if ($result!=1) fwrite($logfile,"Error updating Deadline: $result\n\n");
		else {
			fwrite($logfile,"Deadline Annual Increment: $index[title]\n\n");
			$headers = "From: TRU Research Office <research@tru.ca>\n";
			$headers .= "Reply-To: tdavis@tru.ca\n";
    		$headers .= "X-Mailer: PHP/" . phpversion();
			$headers  .= "\nMIME-Version: 1.0\n";
			$headers .= "Content-type: text/html; charset=iso-8859-1";
			$message="Deadline Incremented <a href='http://$server_name/deadlines.php?section=single&id=$index[deadline_id]'>$index[title]</a>.";
			mail("tdavis@tru.ca","[Server] DL Increment",$message,$headers);
		}
		$mailitems = mysqlFetchRows("mail","assoc_id=$index[date_id] and (type='deadline-close' or type='deadline-early')");
		if(is_array($mailitems)) {
			foreach($mailitems as $mailitem) {
				$outvals=array('assoc_id'=>'null', 'type'=>'null');
				$result=mysqlUpdate("mail",$outvals,"mail_id=$mailitem[mail_id]");
				if ($result != 1) fwrite($logfile,"Error removing SENT status from associated mail: $result\n\n");
			}
		}	
	}
}

#Clean up the big mail log
$too_old = mktime() - (60*60*24*30*2); # Currently 2 months old
$values = mysqlFetchRows("maillog","date <= $too_old");
if (is_array($values)) {
	foreach ($values as $index) mysqldelete("maillog","log_id = $index[log_id]");
	$counter = count($values);
	fwrite($logfile,"Clean up: Deleted $counter log entries.\n\n");
}


#run through the users and assemble mailout for mail list Outlook import
$values=mysqlFetchRows("users left join researchers on users.researcher_id = researchers.researcher_id left join profiles on users.user_id = profiles.user_id","researchers.researcher_id IS NOT NULL and profiles.user_id IS NOT NULL order by users.last_name, users.first_name");
//echo "<pre>";
$body="";
$count=0;
foreach($values as $user){
	set_time_limit(10);
	$pictures = mysqlFetchRows("pictures_associated AS pa LEFT JOIN pictures AS p USING(picture_id)", "pa.object_id='$user[researcher_id]' AND pa.table_name='researchers' order by associated_id");
	$image="";
	if(is_array($pictures)){
		foreach($pictures as $picture) {
			if($picture['feature'] != 1) {
				$image = $picture['file_name'];
				
				if(!file_exists("{$filepath}pictures/" . $image)) $image = "";
				else $image = "http://$server_name/pictures/" . $image;
				
			}
		}
	}
	$user_export=mysqlFetchRow("user_export","user_id=$user[user_id]");
	if(!(is_array($user_export))) {
		$hasharray=array($user['user_id'],strtotime("12:00am $user[date]")-2);
		$result=mysqlInsert("user_export",$hasharray);
		if ($result <> 1) fwrite($logfile, "On user export - error inserting $user[user_id]: $result\n\n");;
		$user_export=mysqlFetchRow("user_export","user_id=$user[user_id]");
		
	}
	if($user_export['date'] <= strtotime("12:00am $user[date]")) {
		$count++;
		$schol="";
		$division="";
		$dept=mysqlFetchRow("departments","department_id=$user[department_id]");
		if(is_array($dept)) {
			 $deptname=$dept['name'];
			 $div=mysqlFetchRow("divisions","division_id=$dept[division_id]");
			 if( is_array($div)) $division=$div['name'];
		}
		else $deptname="";
		
		$body.="$user[user_id]\t$user[first_name]\t$user[last_name]\t$user[present_title]\t$division\t$deptname\t$user[email]\t$user[phone]\t$user[fax]\t$user[office]\t$schol\t$image\t\n";
		$hasharray=array('date'=>strtotime("12:00am today"));
		$result = mysqlUpdate("user_export",$hasharray,"user_id=$user[user_id]");
		if ($result<>1) fwrite($logfile,"On user export - error updating $user[user_id]: $result<br>");
		//echo"Exporting: $user[last_name], $user[first_name]<br>\n";
	}//if change date is > save date
}

if ($body <> "") {
	$headers = "From: TRU Research Office <research@tru.ca>\n";
	$headers .= "Reply-To: research@tru.ca\n";
    $headers .= "X-Mailer: PHP/" . phpversion() ."\n";
	$headers .= "Content-type: text/plain";
	$result = mail("tdavis@tru.ca","[Contact Update]",	$body, $headers);
	if ($result<>1) fwrite($logfile,"User export - error mailing: $result\n\n");
}
if ($count > 0 ) fwrite($logfile,"User Export: $count changes emailed\n\n");



fclose($logfile);

rebuildSiteIndex();

function formatCVTable($rows, $type='') {
	$result = "";
	$rows = explode("!#$*$#!",$rows);
	$count = count(explode("!#$^$#!",$rows[0]));
	for($x=0;$x!=count($rows);$x++) $rows[$x]  = explode("!#$^$#!", $rows[$x]);	
	for($i=0;$i<$count;$i++) {
		//assume that the last item is always the URL, and the second-last is the text
		//$url_item = count($rows) - 1;
		//$text_item = $url_item -1;
		for($x=0;$x!=count($rows);$x++) $result .= $rows[$x][$i] . " ";
		if ($i<$count-1) $result .= ' | ';
	}
	return $result;
}

?>
